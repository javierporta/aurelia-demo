{"version":3,"sources":["src/app.js","src/environment.js","src/grid.js","src/main.js","src/messages.js","src/resources/index.js"],"names":["App","ea","name","phone","language","configureRouter","config","router","title","map","route","moduleId","addMe","speaker","publish","debug","testing","Grid","message","speakers","subscribe","addSpeaker","msg","push","configure","aurelia","uiconfig","use","standardConfiguration","plugin","feature","developmentLogging","start","then","setRoot","SpeakerAdded"],"mappings":";;;;;;;;;;;;;;;;MAWaA,cAAAA,cADZ;AAEC,iBAAYC,EAAZ,EAAgB;AAAA;;AACd,WAAKA,EAAL,GAAUA,EAAV;AACA,WAAKC,IAAL,GAAY,EAAZ;AACA,WAAKC,KAAL,GAAa,EAAb;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACD;;kBAEDC,2CAAgBC,QAAQC,QAAQ;AAC9BD,aAAOE,KAAP,GAAe,UAAf;AACAF,aAAOG,GAAP,CAAW,CAAC;AACVC,eAAO,EADG;AAEVC,kBAAU,MAFA;AAGVH,eAAO;AAHG,OAAD,CAAX;;AAMA,WAAKD,MAAL,GAAcA,MAAd;AACD;;kBAEDK,yBAAQ;AACN,UAAIC,UAAU;AACZX,cAAM,KAAKA,IADC;AAEZC,eAAO,KAAKA,KAFA;AAGZC,kBAAU,KAAKA;AAHH,OAAd;AAKA,WAAKH,EAAL,CAAQa,OAAR,CAAgB,2BAAiBD,OAAjB,CAAhB;AACD;;;;;;;;;;;oBCrCY;AACbE,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;;;;;;;;;;;MCWFC,eAAAA,eADZ;AAEC,kBAAYhB,EAAZ,EAAgB;AAAA;;AAAA;;AACd,WAAKiB,OAAL,GAAe,kBAAf;AACA,WAAKjB,EAAL,GAAUA,EAAV;AACA,WAAKkB,QAAL,GAAgB,CAAC;AACfjB,cAAM,QADS;AAEfC,eAAO,gBAFQ;AAGfC,kBAAU;AAHK,OAAD,CAAhB;;AAMAH,SAAGmB,SAAH,yBAA2B;AAAA,eAAO,MAAKC,UAAL,CAAgBC,IAAIT,OAApB,CAAP;AAAA,OAA3B;AACD;;mBAEDQ,iCAAWR,SAAS;AAClB,cAAQA,QAAQT,QAAhB;AACA,aAAK,GAAL;AACES,kBAAQT,QAAR,GAAmB,SAAnB;AACA;AACF,aAAK,GAAL;AACES,kBAAQT,QAAR,GAAmB,SAAnB;AACA;AACF,aAAK,GAAL;AACES,kBAAQT,QAAR,GAAmB,QAAnB;AACA;AACF;AACES,kBAAQT,QAAR,GAAmB,SAAnB;AACA;AAZF;AAcA,WAAKe,QAAL,CAAcI,IAAd,CAAmBV,OAAnB;AACD;;;;;;;;;;;UCtCaW,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBC,OAAnB,EAA4BC,QAA5B,EAAsC;AAC3CD,YAAQE,GAAR,CACGC,qBADH,GAEGC,MAFH,CAEU,eAFV,EAGGC,OAHH,CAGW,WAHX;;AAKA,QAAI,sBAAYf,KAAhB,EAAuB;AACrBU,cAAQE,GAAR,CAAYI,kBAAZ;AACD;;AAED,QAAI,sBAAYf,OAAhB,EAAyB;AACvBS,cAAQE,GAAR,CAAYE,MAAZ,CAAmB,iBAAnB;AACD;;AAEDJ,YAAQO,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMR,QAAQS,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;MCjBYC,uBAAAA,eACX,sBAAYtB,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACD;;;;;;;;UCHaW,YAAAA;AAAT,WAASA,SAAT,CAAmBlB,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["import {\n  inject\n} from 'aurelia-framework';\nimport {\n  EventAggregator\n} from 'aurelia-event-aggregator';\nimport {\n  SpeakerAdded\n} from './messages';\n\n@inject(EventAggregator)\nexport class App {\n  constructor(ea) {\n    this.ea = ea;\n    this.name = '';\n    this.phone = '';\n    this.language = '';\n  }\n\n  configureRouter(config, router) {\n    config.title = 'Speakers';\n    config.map([{\n      route: '',\n      moduleId: 'grid',\n      title: 'Speakers List'\n    }]);\n\n    this.router = router;\n  }\n\n  addMe() {\n    let speaker = {\n      name: this.name,\n      phone: this.phone,\n      language: this.language\n    };\n    this.ea.publish(new SpeakerAdded(speaker));\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {\r\n  inject\r\n} from 'aurelia-framework';\r\nimport {\r\n  EventAggregator\r\n} from 'aurelia-event-aggregator';\r\nimport {\r\n  SpeakerAdded\r\n} from './messages';\r\n\r\n@inject(EventAggregator)\r\nexport class Grid {\r\n  constructor(ea) {\r\n    this.message = 'Here is the grid';\r\n    this.ea = ea;\r\n    this.speakers = [{\r\n      name: 'Javier',\r\n      phone: '(0387) 0303456',\r\n      language: 'English'\r\n    }];\r\n\r\n    ea.subscribe(SpeakerAdded, msg => this.addSpeaker(msg.speaker));\r\n  }\r\n\r\n  addSpeaker(speaker) {\r\n    switch (speaker.language) {\r\n    case '1':\r\n      speaker.language = 'English';\r\n      break;\r\n    case '2':\r\n      speaker.language = 'Spanish';\r\n      break;\r\n    case '3':\r\n      speaker.language = 'French';\r\n      break;\r\n    default:\r\n      speaker.language = 'English';\r\n      break;\r\n    }\r\n    this.speakers.push(speaker);\r\n  }\r\n\r\n}\r\n","import environment from './environment';\n\nexport function configure(aurelia, uiconfig) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-table')\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class SpeakerAdded {\r\n  constructor(speaker) {\r\n    this.speaker = speaker;\r\n  }\r\n}\r\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}